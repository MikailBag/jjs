initSidebarItems({"enum":[["DesiredAccess","Mount options. * Readonly: jailed process can read & execute, but not write to * Full: jailed process can read & write & execute"],["DominionRefInner",""],["Error",""],["InputSpecificationData","Configures stdin for child"],["OutputSpecificationData","Configures stdout and stderr for child"],["WaitOutcome","Returned by [ChildProcess::wait_for_exit]"]],"fn":[["check","This functions checks for system configurations issues. If it returns None, minion will probably work. If it returns Some(s), s is human-readable string describing these problems. It should be shown to administrtor, so that they can fix this problem."],["setup",""]],"mod":[["command",""],["errors",""],["linux",""]],"struct":[["ChildProcessOptions","This type should only be used by Backend implementations Use `Command` instead"],["Command","Child process builder"],["DominionOptions",""],["DominionRef","Type-erased dominion"],["InputSpecification",""],["LinuxDominion",""],["OutputSpecification",""],["PathExpositionOptions",""],["ResourceUsageData","This struct is returned by `Dominion::query_usage_data` It represents various resource usage Some items can be absent or rounded"],["StdioSpecification","Specifies how to provide child stdio"]],"trait":[["Backend","Represents way of isolation"],["ChildProcess","Represents child process."],["Dominion","Represents highly-isolated sandbox"]],"type":[["DefaultBackend",""],["Result",""]]});